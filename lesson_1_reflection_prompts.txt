How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It reduces the amount of info shown in the screen to the changes between
    the two versions making a lot easier to find the bug.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It will be easy to go to a working old version of the script if I made a
    mistake.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: You only commit when relevant changes are done and you can avoid
    compiling errors.
    Cons: You may forget to commit.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    If you add a new feature in programming it can affect to different files,
    and in other areas like writing or photo editing it is not that common.

How can you use the commands git log and git diff to view the history of files?

    Git log shows the history of commits and you can compare the different
    versions using git diff

How might using version control make you more confident to make changes that
could break something?

    Because if I put some bad code I can always checkout to a previous working
    version

Now that you have your workspace set up, what do you want to try using Git for?

    It will be useful for my data scientist career
